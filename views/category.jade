extends layout

block content

	if message
		p.pull-center.message #{message}
	if error
		p.pull-center.error #{error}

	- var day   = theData[0].date.getDate();
	- var month = theData[0].date.getMonth() + 1;
	if (month < 10)
		- month = '0'+month;
	- var year  = theData[0].date.getFullYear();
	.pure-g-r
		.pure-u-1-4
		.pure-u-1-2.pull-center
			h2.sans <small>Your daily</small> #{category.name} <small>since</small> #{month}/#{day}/#{year}
		.pure-u-1-4

	#graph(style="height:300px;").pull-center
		- var sum = 0;
		- for d in theirData
			- sum += d;
		- sum = (sum/theirData.length);
		- var data = [], dumb = [];
		- for d in theData
			- data.push(d.quantity);dumb.push(sum);
		- var max_of_array = Math.max.apply(Math, data), min_of_array = Math.min.apply(Math, data);
		- var taDate = theData[theData.length-1].date.getDate(), taMonth = theData[theData.length-1].date.getMonth(), toDate = (new Date).getDate(), toMonth = (new Date).getMonth();
		span Dataset: #{data.length} | Max: #{max_of_array} | Min: #{min_of_array} | Latest: #{theData[theData.length-1].quantity}
			if ((taDate == toDate) && (taMonth == toMonth))
				small  (today)
		br
		small Average for your age and gender: #{sum} (grey line)
	.second-main.pure-g-r
		.pure-u-1-6
		.pure-u-1-3
			form(action="/add-datum", method="post").pure-g-r
				.pure-u-3-4
					#category
						p.underline #{category.name}
						input(type="hidden", data-provide="typeahead", name="category", placeholder="Name/Category", value='#{ category.name }')
				.pure-u-1-4
					input.numeric(type="float", name="quantity", placeholder="Quantity")
				input(type="hidden", name="account", value='#{user._id}')
				#submit
				input(type="submit", value="Add #{category.name}")
		.pure-u-1-3
			h4.pull-center Your History
			- for d in theData.reverse()
				p.pull-center
					a(href="/datum/#{d._id}") #{d.quantity} <small>on</small> #{d.date.getMonth()}/#{d.date.getDate()}/#{d.date.getFullYear()}
	script(src="http://d3js.org/d3.v3.min.js")
	script(src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js")
	script(src='/javascripts/numeric.js')
	script(src='/javascripts/add-datum.js')
	script
		console.log(#{theirData});
		// create an SVG element inside the #graph div that fills 100% of the div
		var div = document.getElementById("graph");
		var graph = d3.select("#graph").append("svg:svg").attr("width", "100%").attr("height", "100%");

		// create a simple data array that we'll plot with a line (this array represents only the Y values, X will just be the index location)
		var data = [#{data}], dumb = [#{dumb}];console.log('sum = '+#{sum}+', '+#{sum});
								console.log('max = '+#{max_of_array}+', min = '+#{min_of_array}+', and length = '+data.length)

		// X scale will fit values from 0-10 within pixels 0-100
		var x = d3.scale.linear().domain([0, data.length]).range([(div.offsetWidth/12), (div.offsetWidth)]);
		// Y scale will fit values from 0-10 within pixels 0-100
		var y = d3.scale.linear().domain([(#{max_of_array}+1), (#{min_of_array}-2)]).range([0, 200]);

		// create a line object that represents the SVN line we're creating
		var line = d3.svg.line()
		// assign the X function to plot our line as we wish
		.x(function(d,i) {
		// verbose logging to show what's actually being done
		// console.log('Plotting X value for data point: ' + d + ' using index: ' + i + ' to be at: ' + x(i) + ' using our xScale.');
		// return the X coordinate where we want to plot this datapoint
		return x(i);
		})
		.y(function(d) {
		// verbose logging to show what's actually being done
		// console.log('Plotting Y value for data point: ' + d + ' to be at: ' + y(d) + " using our yScale.");
		// return the Y coordinate where we want to plot this datapoint
		return y(d);
		}).interpolate("monotone")

		// display the line by appending an svg:path element with the data line we created above
		graph.append("svg:path")
		.attr("id", "myOtherPath")
		.attr("stroke", "lightgrey")
		.attr("stroke-width", 1)
		.attr("fill", "none")
		.attr("d", line(dumb))
		.attr("id", "myOtherPath");
		graph.append("svg:path")
		.attr("id", "myPath")
		.attr("stroke", "#384682")
		.attr("stroke-width", 1)
		.attr("fill", "none")
		.attr("d", line(dumb))
		.attr("id", "myPath")
		.on("mousemove", mMove)
		.transition().duration(1000).attr("d", line(data))
		.ease('bounce');
		function mMove(){
		var m = d3.mouse(this);
		d3.select("#myPath").select("title").text(m);
		};
