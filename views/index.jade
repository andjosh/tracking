extends layout

block content

	if message
		p.pull-center.message #{message}
	if error
		p.pull-center.error #{error}

	#main.pure-g-r
		.pure-u-1-2.pull-center
			h1.sans
				a(href="/")= title
			#infoBox
			p#about Everyone likes a graph.
		.pure-u-1-2
			if user
				if user.username
					h2.sans Hi #{ user.username }!
				p You are 
					a#age(href="/account", class="") many
					|  years old.
			if (!user)
				p.pull-center.lead Join #{ accounts } others by registering and starting on your own track today.
	if user
		.second-main
			.pure-g-r
				.pure-u-1-2.pull-center
					h2 Add Data
				.pure-u-1-4
					form(action="/add-datum", method="post")
						.pure-u-3-4
							#category
								input(type="text", data-provide="typeahead", name="category", placeholder="Name/Category", data-source='[#{ categories }]')
						.pure-u-1-4
							input(type="float", name="quantity", placeholder="Quantity")
						input(type="hidden", name="account", value=user._id)
						#submit
						input(type="submit", value="Add", class="cool")
		.second-main.pure-g-r
			.pure-u-1-3
			.pure-u-1-3.pull-center
				h2 You are tracking
			.pure-u-1-3
			- var i = 0;
			- while(i<(whenData.length)){
				.pure-u-1-5.pull-center
					a(href="/category/#{whenData[i]._id}").btn #{whenCats[i]} 
						small #{whenData[i].value}
				- i = i+1;}

		script(src='/javascripts/add-datum.js')
		script(src='/javascripts/index.js')
	script(src="http://d3js.org/d3.v3.min.js")
	if (!user)
		#graph(style="height:200px;")
		- var data = [0], i = 0;
		- for wd in whenData
			- data.push(wd.value);
			- i++;
		- var max_of_array = Math.max.apply(Math, data);
		script
			// create an SVG element inside the #graph div that fills 100% of the div
			var graph = d3.select("#graph").append("svg:svg").attr("width", "100%").attr("height", "100%");

			// create a simple data array that we'll plot with a line (this array represents only the Y values, X will just be the index location)
			var data = [#{data}];
			console.log('max = '+#{max_of_array})
				
			// X scale will fit values from 0-10 within pixels 0-100
			var x = d3.scale.linear().domain([0, 10]).range([0, 500]);
			// Y scale will fit values from 0-10 within pixels 0-100
			var y = d3.scale.linear().domain([#{max_of_array}, 0]).range([0, 100]);

			// create a line object that represents the SVN line we're creating
			var line = d3.svg.line()
				// assign the X function to plot our line as we wish
				.x(function(d,i) { 
					// verbose logging to show what's actually being done
					// console.log('Plotting X value for data point: ' + d + ' using index: ' + i + ' to be at: ' + x(i) + ' using our xScale.');
					// return the X coordinate where we want to plot this datapoint
					return x(i); 
				})
				.y(function(d) { 
					// verbose logging to show what's actually being done
					// console.log('Plotting Y value for data point: ' + d + ' to be at: ' + y(d) + " using our yScale.");
					// return the Y coordinate where we want to plot this datapoint
					return y(d); 
				}).interpolate("monotone")
		
				// display the line by appending an svg:path element with the data line we created above
				graph.append("svg:path")
					.attr("id", "myPath")
					.attr("stroke", "steelblue")
					.attr("stroke-width", 1)
					.attr("fill", "none")
					.attr("d", line(data))
					.attr("id", "myPath")
					//.on("mousemove", mMove)
					.append("title");
				function mMove(){
					var m = d3.svg.mouse(this);
					d3.select("#myPath").select("title").text(m);
				};
